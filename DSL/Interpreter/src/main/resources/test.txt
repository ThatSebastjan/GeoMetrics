
const iAmGlobalLambda = lambda(x, y, w, h){

    const nestedLambda = lambda(a, b){ return a + b; };

    return Box(<x, y>, <nestedLambda(x, w), y - h>);
}; //Yes there must be a semicolon here because it's a constant definition, and it must end with ";"



const cadastreData = import "./singleFeature.json";

cadastre {

    .name: cadastreData.name;
    .id: cadastreData.id;
    .bounds: cadastreData.geometry;
    .tag: cadastreData.tag;


    const importedData = import "./exampleImportData.json"; //This file is in project root directory

    foreach feature in importedData {

        if(area(feature.geometry) > 10){

            lot {
                .id: feature.id;
                .type: Forest;
                .bounds: feature.geometry; //geometry prop = Polygon

                .other: feature.someProp;
            }
        }

    }

}



cadastre {
    .name: "Maribor";
    .id: "123";
    .bounds: Circle(<15.645881, 46.55465>, 5000);

    road("123/21", PolyLine(2, <15.643109766995565, 46.54963762218787>,<15.643713800074494, 46.54949888183128>,<15.643569217583433, 46.54917119261518>));
}



risk {
    .type: Flood;
    .bounds: iAmGlobalLambda(32.48956996423021, 20.994293425751735, 4, 3);
    .frequency: 0.24;
    .probability: 0.4;
}
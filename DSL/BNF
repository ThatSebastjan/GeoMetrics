

#Non-terminal definitions

NumericExpr ::= AddSub


AddSub ::= MulDiv AddSub'
 
AddSub' ::= + MulDiv AddSub'
            | - MulDiv AddSub'
            | <epsilon>


MulDiv ::= NumericType MulDiv'

MulDiv' ::= * NumericType MulDiv' 
            | / NumericType MulDiv' 
            | <epsilon>


NumericType ::= -<number>
                | <number>
                | (AddSub)



PointType ::= <NumericExpr, NumericExpr>    # declared this way to prevent collisions with numeric expressions wrapped in ()


PolygonType ::= Polygon(PolygonPoints)

PolygonPoints ::= PointType PolygonPoints'

PolygonPoints' ::= , PolygonPoints | <epxilon>


ConstDef ::= const <constName> = ConstValue;



ConstValue ::= NumericExpr | PointType | PolygonType









#Terminal definitions

<number> = \d+(?:\.\d+)?

<string> = "([^"]*)"   #match group = string data

<constName> = [a-zA-Z_$][a-zA-Z_$0-9]*
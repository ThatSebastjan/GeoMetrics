name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'WebApp/frontend/**'
      - 'WebApp/backend/**'
  workflow_dispatch:

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Detect changes in frontend
      - name: Check if frontend has changes
        id: frontend-changed
        run: |
          echo "changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^WebApp/frontend/' && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Build and push Frontend Docker image
        if: steps.frontend-changed.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./WebApp/frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/geometrics:frontend
          file: ./WebApp/frontend/Dockerfile
          platforms: linux/arm64

      # Detect changes in backend
      - name: Check if backend has changes
        id: backend-changed
        run: |
          echo "changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^WebApp/backend/' && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Build and push Backend Docker image
        if: steps.backend-changed.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./WebApp/backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/geometrics:backend
          file: ./WebApp/backend/Dockerfile
          platforms: linux/arm64

  send-webhook-notification:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: ${{ always() }}

    steps:
      - name: Webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          headers: '{"api-key": "${{ secrets.WEBHOOK_API_KEY }}"}'
          body: '{"event": "deployment", "repository": "${{ github.repository }}"}'
          insecure: true
          github_event_payload: true